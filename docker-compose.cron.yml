version: "3.8"

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: knue-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_storage:/qdrant/storage
      - ./config/qdrant.yml:/qdrant/config/production.yaml:ro
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - knue-network

  indexer:
    build: .
    container_name: knue-indexer
    restart: unless-stopped
    depends_on:
      qdrant:
        condition: service_healthy
    volumes:
      - ./repo_cache:/app/repo_cache
      - ./logs:/app/logs
      - ./scripts/crontab:/etc/cron.d/knue-sync:ro
    environment:
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_URL=http://host.docker.internal:11434
      - GIT_REPO_URL=https://github.com/kadragon/KNUE-Policy-Hub.git
      - COLLECTION_NAME=knue_policies
      - LOG_LEVEL=INFO
    networks:
      - knue-network
    command: >
      sh -c "
        # Give cron permissions and start cron daemon
        chmod 0644 /etc/cron.d/knue-sync &&
        crontab /etc/cron.d/knue-sync &&
        cron &&
        # Run initial sync
        echo 'Running initial sync...' &&
        python -m src.sync_pipeline sync &&
        # Keep container running
        tail -f /dev/null
      "

volumes:
  qdrant_storage:
    driver: local

networks:
  knue-network:
    driver: bridge