name: Daily Vector Sync

on:
  schedule:
    # 매일 07:00 KST (22:00 UTC 전날)
    - cron: "0 22 * * *"
  workflow_dispatch: # 수동 실행 가능

# 동시 실행 방지
concurrency:
  group: daily-vector-sync
  cancel-in-progress: true

permissions:
  contents: read
  actions: read

env:
  # OpenAI 설정
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  # Qdrant Cloud 설정
  QDRANT_CLOUD_URL: ${{ secrets.QDRANT_CLOUD_URL }}
  QDRANT_API_KEY: ${{ secrets.QDRANT_API_KEY }}

  # 처리 설정
  MAX_TOKEN_LENGTH: 8192
  MAX_DOCUMENT_CHARS: 30000
  BATCH_SIZE: 10
  MAX_WORKERS: 4
  LOG_LEVEL: INFO

  # KNUE Board 설정
  BOARD_INDICES: "25,26,11,207,28,256"

jobs:
  policy-vector-sync:
    name: Policy Vector Sync
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Prepare uv cache directories
        run: |
          mkdir -p ~/.cache/uv
          mkdir -p ~/.local/share/uv

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: |
          uv sync --no-dev
          uv pip install -e .

      - name: Create logs directory
        run: mkdir -p logs

      - name: Health check
        run: |
          uv run python -m src.sync_pipeline health
        timeout-minutes: 5
        env:
          GIT_REPO_URL: https://github.com/kadragon/KNUE-Policy-Hub.git
          GIT_BRANCH: main
          LOG_FILE: logs/policy-sync.log

      - name: Run policy vector sync
        run: |
          uv run python -m src.sync_pipeline sync
        timeout-minutes: 30
        env:
          GIT_REPO_URL: https://github.com/kadragon/KNUE-Policy-Hub.git
          GIT_BRANCH: main
          LOG_FILE: logs/policy-sync.log

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: policy-sync-logs-${{ github.run_number }}
          path: logs/
          retention-days: 7
          if-no-files-found: ignore

  board-vector-sync:
    name: Board Vector Sync
    runs-on: ubuntu-latest
    needs: policy-vector-sync # policy sync 완료 후 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Prepare uv cache directories
        run: |
          mkdir -p ~/.cache/uv
          mkdir -p ~/.local/share/uv

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: |
          uv sync --no-dev
          uv pip install -e .

      - name: Create logs directory
        run: mkdir -p logs

      - name: Health check
        run: |
          uv run python -m src.sync_pipeline health
        timeout-minutes: 5
        env:
          LOG_FILE: logs/board-sync.log

      - name: Run board vector sync
        run: |
          uv run python -m src.sync_pipeline board-sync
        timeout-minutes: 60
        env:
          LOG_FILE: logs/board-sync.log

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: board-sync-logs-${{ github.run_number }}
          path: logs/
          retention-days: 7
          if-no-files-found: ignore

  notify-completion:
    name: Notify Completion
    runs-on: ubuntu-latest
    needs: [policy-vector-sync, board-vector-sync]
    if: always()

    steps:
      - name: Send completion notification
        run: |
          echo "=== Daily Vector Sync Report ==="
          echo "Execution completed at: $(date)"
          echo "Workflow run number: ${{ github.run_number }}"
          echo "Triggered by: ${{ github.event_name }}"
          echo ""
          echo "Job Results:"
          echo "  - Policy sync: ${{ needs.policy-vector-sync.result }}"
          echo "  - Board sync: ${{ needs.board-vector-sync.result }}"
          echo ""
          if [[ "${{ needs.policy-vector-sync.result }}" == "failure" || "${{ needs.board-vector-sync.result }}" == "failure" ]]; then
            echo "❌ One or more jobs failed. Check logs for details."
            exit 1
          elif [[ "${{ needs.policy-vector-sync.result }}" == "success" && "${{ needs.board-vector-sync.result }}" == "success" ]]; then
            echo "✅ All jobs completed successfully!"
          else
            echo "⚠️  Some jobs were skipped or cancelled."
          fi
